//1. Write a function to calculate length of the string
#include<string.h>
#include<stdio.h>
int length_str(char s[])
{
    int i;
    for(i=0;s[i];i++);
    return --i;
}

int main()
{
   char str[100];
   int l;
   printf("enter a string");
   fgets(str,100,stdin);
   l=length_str(str);
   printf("length is %d",l);
   return 0;
}

//2. Write a function to reverse a string.
#include<string.h>
void rev(char str[],int n)
{
    int temp,i,j=strlen(str)-1;
    for(i=0;i<=j;i++)
    {
        temp=str[i];
        str[i]=str[j];
        str[j]=temp;
        j--;
    }
    printf("string after reverse is : %s",str);
}
int main()
{
    char str[50];
    printf("enter a string ");
    fgets(str,50,stdin);
    rev(str,50);
    return 0;
}

//3. Write a function to compare two strings
int comstring(char str1[],char str2[],int n1,int n2)
{
    int i,j=0,c;
    for(i=0;i<n1+n2;i++)
    {
      while(i==j)
      {
          c=str1[i]-str2[j];
      if(c>0)
      {
          printf("%s is greater",str1);
          fflush(stdin);
          printf("d",c);
          break;
      }
      else if(c<0)
          {
         printf("%s is greater",str2);
          break;
          }
          j++;
      }
      if(c==0)
        if(str2[j]=='\0')
          {
          printf("both are equal");
          break;
          }

    }


}
int main()
{
    char s1[50],s2[50];
    printf("enter 1st string ");
    fgets(s1,50,stdin);
    fflush(stdin);
    printf("enter 2nd string ");
    fgets(s2,50,stdin);
    comstring(s1,s2,50,50);
    return 0;
}


//4. Write a function to transform string into uppercase
void upper(char s[])
{
    int i;
    for(i=0;s[i];i++)
    {
         if(s[i]>='a')
            if(s[i]<='z')
              s[i]-=32;
    }
    printf("%s",s);
}

int main()
{
    char str[100];
    printf("enter a string ");
    fgets(str,100,stdin);
    upper(str);
    return 0;
}

//5. Write a function to transform string into lowercase
void lower(char s[])
{
    int i;
    for(i=0;s[i];i++)
    {
         if(s[i]>='A')
            if(s[i]<='Z')
              s[i]+=32;
    }
    printf("%s",s);
}

int main()
{
    char str[100];
    printf("enter a string ");
    fgets(str,100,stdin);
    lower(str);
    return 0;
}

//6. Write a function to check whether a given string is an alphanumeric string or not. (Alphanumeric string must contain at least one alphabet and one digit)

int alphanum(char str[],int n)
{
    int i;
    for(i=0;str[i];i++)
    {
      if(str[i]>='a'&&str[i]<='z'||str[i]>='A'&&str[i]<='Z'||str[i]>='0'&&str[i]<='9')
                return 1;//if string contain alphanumeric value then return 1;
    }
    return 0;//else return 0;
}
int main()
{
    char str[50];
    printf("enter a string ");
    fgets(str,50,stdin);
    printf("%d ",alphanum(str,50));
    return 0;
}

//7. Write a function to check whether a given string is palindrome or not.
#include<string.h>
void palindrome(char str[],int n)
{
    int i,j=strlen(str)-1,c=0;

    for(i=0;i<=j;i++)
    {
      if(str[i]==str[j])
       c++;
    j--;
    }
    if(c==0)
        printf("%s is palindrome",str);
    else
       printf("%s is not palindrome",str);
}

int main()
{
   char str[50];
   printf("enter a string ");
   fgets(str,50,stdin);
   palindrome(str,50);
   return 0;
}

//8. Write a function to count words in a given string
int count_word(char str[],int n)
{
    int i,count=0;
    for(i=0;str[i];i++)
    {
        if(str[i]==' '||str[i]=='\n')
             count++;
    }
    return count;
}

int main()
{
    int str[50];
    printf("enter a string ");
    fgets(str,50,stdin);
    printf("total words = %d",count_word(str,50));
    return 0;
}
/*9. Write a function to reverse a string word wise. (For example if the given string is
“Mysirg Education Services” then the resulting string should be “Services Education
Mysirg” )*/

void swap(char str[],int start,int end)
{
    char temp;
    while(start<=end)
    {
        temp=str[start];
        str[start]=str[end];
        str[end]=temp;
        start++;
        end--;
    }
}
int main()
{
    int i=0,start=0,end=0,flag=0;
    char str[50];
    printf("enter a string : ");
    fgets(str,50,stdin);
    str[strlen(str)-1]='\0';
    while(str[i]!='\0')
    {
        while(str[i]!=' ')
        {
            if(str[i]=='\0')
            {
             flag=1;
             break;
            }
            end++;
            i++;
        }
        swap(str,start,end-1);
        if(flag==1)
            break;
        start=end++;
        i++;
    }
    swap(str,0,i-1);
    printf("%s ",str);
    return 0;
}

//10. Write a function to find the repeated character in a given string
char repeatchar(char str[])
{
    int i,j,count=0;
    char temp='\0';
    for(i=0;str[i];i++)
    {
        for(j=i+1;str[j];j++)
        {
            if(str[i]==str[j])
                {
                    temp=str[i];
                    count++;
                }
        }
        if(count!=0)
            return temp;
    }
}
int main()
{
  char str[50];
  printf("enter a string : ");
  fgets(str,50,stdin);
  printf("repeated character in \"%s\" is %c ",str,repeatchar(str));
  return 0;
}
